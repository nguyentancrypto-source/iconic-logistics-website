name: Notify Telegram on PR events

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to send notification for'
        required: true
        type: number

jobs:
  notify:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Collect merged PR details
        id: details
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const number = github.event_name === 'workflow_dispatch' ? 
              parseInt('${{ github.event.inputs.pr_number }}') : 
              context.payload.pull_request.number;
            // Fetch PR for totals
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: number });
            const totals = `${pr.changed_files} files, +${pr.additions}/-${pr.deletions}`;
            let files = [];
            const per_page = 100;
            for (let page = 1; page <= 10; page++) {
              const res = await github.rest.pulls.listFiles({ owner, repo, pull_number: number, per_page, page });
              files = files.concat(res.data);
              if (res.data.length < per_page) break;
            }
            const top = files.slice(0, 10).map(f => `- ${f.filename} (+${f.additions}/-${f.deletions})`).join('\n');
            const more = files.length > 10 ? `\n‚Ä¶ and ${files.length - 10} more files` : '';
            // Collect commits (top 5)
            let commits = [];
            for (let page = 1; page <= 10; page++) {
              const res = await github.rest.pulls.listCommits({ owner, repo, pull_number: number, per_page, page });
              commits = commits.concat(res.data);
              if (res.data.length < per_page) break;
            }
            const commitLines = commits.slice(0, 5).map(c => {
              const sha = c.sha.substring(0,7);
              const msg = (c.commit && c.commit.message ? c.commit.message.split('\n')[0] : '').slice(0, 120);
              const who = (c.commit && c.commit.author && c.commit.author.name) ? c.commit.author.name : (c.author && c.author.login) ? c.author.login : 'unknown';
              return `‚Ä¢ ${sha} ${msg} (${who})`;
            }).join('\n');
            core.setOutput('files', top + more);
            core.setOutput('totals', totals);
            core.setOutput('commits', commitLines);
      - name: Send Telegram message (PR merged)
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -z "$BOT_TOKEN" ] || [ -z "$CHAT_ID" ]; then
            echo "Telegram secrets not set, skipping notification."
            exit 0
          fi
          FILES=$(echo "${{ steps.details.outputs.files }}")
          COMMITS=$(echo "${{ steps.details.outputs.commits }}")
          TOTALS=$(echo "${{ steps.details.outputs.totals }}")
          PR_URL="${{ github.event.pull_request.html_url }}"
          DIFF_URL="${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/files"
          
          TEXT="üéâ *PR ƒë√£ merge th√†nh c√¥ng!*"$'\n\n'
          TEXT+="üì¶ *Th√¥ng tin PR:*"$'\n'
          TEXT+="‚Ä¢ Repo: \`${{ github.repository }}\`"$'\n'
          TEXT+="‚Ä¢ PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"$'\n'
          TEXT+="‚Ä¢ Branch: \`${{ github.event.pull_request.head.ref }}\` ‚Üí \`main\`"$'\n'
          TEXT+="‚Ä¢ Ng∆∞·ªùi th·ª±c hi·ªán: @${{ github.actor }}"$'\n'
          TEXT+="‚Ä¢ Th·ªëng k√™: $TOTALS"$'\n\n'
          TEXT+="üìù *Commits m·ªõi nh·∫•t:*"$'\n'
          TEXT+="$COMMITS"$'\n\n'
          TEXT+="üìÑ *Files thay ƒë·ªïi:*"$'\n'
          TEXT+="$FILES"$'\n\n'
          TEXT+="üîó *Li√™n k·∫øt:*"$'\n'
          TEXT+="‚Ä¢ [Xem PR]($PR_URL)"$'\n'
          TEXT+="‚Ä¢ [Xem thay ƒë·ªïi]($DIFF_URL)"$'\n'
          TEXT+="‚Ä¢ [Workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          
          curl -s --data-urlencode "chat_id=$CHAT_ID" --data-urlencode "text=$TEXT" --data-urlencode "parse_mode=Markdown" "https://api.telegram.org/bot$BOT_TOKEN/sendMessage"
